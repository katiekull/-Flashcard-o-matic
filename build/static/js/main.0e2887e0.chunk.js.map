{"version":3,"sources":["Layout/Header.js","utils/api/index.js","Layout/Decks/DeckList.js","Layout/Home.js","Layout/Study.js","Layout/Decks/CreateDeck.js","Layout/Decks/Deck.js","Layout/Decks/EditDeck.js","Layout/Decks/AddCard.js","Layout/Decks/EditCard.js","Layout/NotFound.js","Layout/index.js","App.js","index.js"],"names":["Header","className","API_BASE_URL","process","headers","Headers","stripCards","deck","cards","fetchJson","url","options","onCancel","a","fetch","response","status","Error","statusText","json","name","console","error","stack","Promise","resolve","listDecks","signal","createDeck","method","body","JSON","stringify","deleteDeck","deckId","append","DeckList","updateDecks","id","description","deckLength","length","history","useHistory","deleteHandler","window","confirm","go","to","onClick","value","Home","useState","decks","setDecks","useEffect","getDeckFromAPI","log","getDeck","map","Study","CreateDeck","newDeck","setNewDeck","event","preventDefault","push","handleChange","target","type","placeholder","onChange","style","width","rows","Deck","EditDeck","AddCard","EditCard","NotFound","Layout","exact","path","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0e2887e0.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header() {\n  return (\n    <header className=\"jumbotron bg-dark\">\n      <div className=\"container text-white\">\n        <h1 className=\"display-4\">Flashcard-o-matic</h1>\n        <p className=\"lead\">Discover The Flashcard Difference.</p>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","/**\n * Defines the base URL for the API.\n * The default values is overridden by the `API_BASE_URL` environment variable.\n */\nconst API_BASE_URL = process.env.API_BASE_URL || \"http://localhost:5000\";\n\n/**\n * Defines the default headers for these functions to work with `json-server`\n */\nconst headers = new Headers();\nheaders.append(\"Content-Type\", \"application/json\");\n\n/**\n * Removes the `cards` property from the deck so it is not accidentally saved with the deck.\n *\n * This function is NOT exported because it is not needed outside of this file.\n *\n * @param deck\n *  the deck instance\n * @returns {*}\n *  a copy of the deck instance with the `cards` property removed.\n */\nfunction stripCards(deck) {\n  const { cards, ...deckWithoutCards } = deck;\n  return deckWithoutCards;\n}\n\n/**\n * Fetch `json` from the specified URL and handle error status codes and ignore `AbortError`s\n *\n * This function is NOT exported because it is not needed outside of this file.\n *\n * @param url\n *  the url for the requst.\n * @param options\n *  any options for fetch\n * @param onCancel\n *  default value returned if the fetch is cancelled.\n * @returns {Promise<Error|any>}\n *  a promise that resolves to the `json` data or an error.\n *  If the response is not in the 200 - 399 range the promise is rejected.\n */\n\nasync function fetchJson(url, options, onCancel) {\n  try {\n    const response = await fetch(url, options);\n\n    if (response.status < 200 || response.status > 399) {\n      throw new Error(`${response.status} - ${response.statusText}`);\n    }\n\n    if (response.status === 204) {\n      return null;\n    }\n\n    return await response.json();\n\n  } catch (error) {\n    if (error.name !== \"AbortError\") {\n      console.error(error.stack);\n      throw error;\n    }\n    return Promise.resolve(onCancel);\n  }\n}\n\n/**\n * Retrieves all existing decks.\n * @returns {Promise<[deck]>}\n *  a promise that resolves to a possibly empty array of decks saved in the database.\n */\nexport async function listDecks(signal) {\n  const url = `${API_BASE_URL}/decks?_embed=cards`;\n  return await fetchJson(url, { signal }, []);\n}\n\n/**\n * Saves deck to the database (public/data/db.json).\n * There is no validation done on the deck object, any object will be saved.\n * @param deck\n *  the deck to save, which must not have an `id` property\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<deck>}\n *  a promise that resolves the saved deck, which will now have an `id` property.\n */\nexport async function createDeck(deck, signal) {\n  const url = `${API_BASE_URL}/decks`;\n  const options = {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify(stripCards(deck)),\n    signal,\n  };\n  return await fetchJson(url, options, {});\n}\n\n/**\n * Retrieves the deck with the specified `deckId`\n * @param deckId\n *  the `id` property matching the desired deck.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<any>}\n *  a promise that resolves to the saved deck.\n */\nexport async function readDeck(deckId, signal) {\n  const url = `${API_BASE_URL}/decks/${deckId}?_embed=cards`;\n  return await fetchJson(url, { signal }, {});\n}\n\n/**\n * Updates an existing deck\n * @param updatedDeck\n *  the deck to save, which must have an `id` property.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the updated deck.\n */\nexport async function updateDeck(updatedDeck, signal) {\n  const url = `${API_BASE_URL}/decks/${updatedDeck.id}?_embed=cards`;\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify(stripCards(updatedDeck)),\n    signal,\n  };\n  return await fetchJson(url, options, updatedDeck);\n}\n\n/**\n * Deletes the deck with the specified `deckId`.\n * @param deckId\n *  the id of the deck to delete\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to an empty object.\n */\nexport async function deleteDeck(deckId, signal) {\n  const url = `${API_BASE_URL}/decks/${deckId}`;\n  const options = { method: \"DELETE\", signal };\n  return await fetchJson(url, options);\n}\n\n/**\n * Creates a new card associated with the specified `deckId`.\n * There is no validation that there is an existing deck with the specified `deckId`.\n * @param deckId\n *  the id of the target deck\n * @param card\n *  the card to create, which must not have an `id` property\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the new card, which will have an `id` property.\n */\nexport async function createCard(deckId, card, signal) {\n  // There is a bug in json-server, if you post to /decks/:deckId/cards the associated deckId is a string\n  // and the card is not related to the deck because the data types of the ID's are different.\n  const url = `${API_BASE_URL}/cards`;\n  card.deckId = Number(deckId);\n  const options = {\n    method: \"POST\",\n    headers,\n    body: JSON.stringify(card),\n    signal,\n  };\n  return await fetchJson(url, options, card);\n}\n\n/**\n * Retrieves the card with the specified `cardId`\n * @param cardId\n *  the id of the target\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the saved card.\n */\nexport async function readCard(cardId, signal) {\n  const url = `${API_BASE_URL}/cards/${cardId}`;\n  return await fetchJson(url, { signal }, {});\n}\n\n/**\n * Updates an existing deck\n * @param updatedCard\n *  the card to save, which must have an `id` property.\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to the updated card.\n */\nexport async function updateCard(updatedCard, signal) {\n  const url = `${API_BASE_URL}/cards/${updatedCard.id}`;\n  const options = {\n    method: \"PUT\",\n    headers,\n    body: JSON.stringify(updatedCard),\n  };\n  return await fetchJson(url, options, updatedCard);\n}\n\n/**\n * Deletes the card with the specified `cardId`.\n * @param cardId\n *  the id of the card to delete\n * @param signal\n *  optional AbortController.signal\n * @returns {Promise<Error|*>}\n *  a promise that resolves to an empty object.\n */\nexport async function deleteCard(cardId, signal) {\n  const url = `${API_BASE_URL}/cards/${cardId}`;\n  const options = { method: \"DELETE\", signal };\n  return await fetchJson(url, options);\n}\n","import React from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { deleteDeck } from \"../../utils/api/index\";\n\nfunction DeckList({ deck, updateDecks }) {\n  const { id, name, description, cards } = deck;\n  const deckLength = cards.length;\n  const history = useHistory();\n\n  // delete button handler\n  const deleteHandler = async () => {\n    if (\n      window.confirm(\n        \"Are you sure you want to delete this deck? You will not be able to recover it.\"\n      )\n    ) {\n      await deleteDeck(id);\n      updateDecks(-1);\n      history.go(0);\n    } else {\n      history.go(0);\n    }\n  };\n\n  return (\n    <div className=\"card w-75 mb-4\">\n      <div className=\"card-body\">\n        <div className=\"row px-3\">\n          <h5 className=\"card-title\">{name}</h5>\n          <p className=\"ml-auto\">{deckLength} cards</p>\n        </div>\n        <p className=\"card-text\">{description}</p>\n        <div className=\"row px-3\">\n          <Link to={`/decks/${id}`} className=\"btn btn-secondary\">\n            View\n          </Link>\n\n          <Link to={`/decks/${id}/study`} className=\"btn btn-primary ml-3\">\n            Study\n          </Link>\n\n          <button\n            onClick={deleteHandler}\n            name=\"delete\"\n            value={id}\n            className=\"btn btn-danger ml-auto\"\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default DeckList;\n","import React, {useState, useEffect} from \"react\";\nimport {Link} from \"react-router-dom\";\nimport {listDecks} from \"../utils/api/index\";\nimport DeckList from \"./Decks/DeckList\";\n\n\nfunction Home() {\n    const [decks, setDecks] = useState([]);\n    useEffect(() => {\n      async function getDeck() {\n        try {\n          const getDeckFromAPI = await listDecks();\n          setDecks(getDeckFromAPI);\n        } catch (error) {\n          console.log(error)\n        }\n      }\n      getDeck();\n    },[]);\n  \n  return (\n    <div>\n      <div className=\"row mx-auto\">\n        <Link to=\"/decks/new\" className=\"btn btn-secondary w-25 mb-3\">\n         Create Deck\n        </Link>\n      </div>\n      <div className=\"row w-100 mx-auto\">\n        {decks.map((deck) => (\n          <DeckList key={deck.id} deck={deck} />\n        ))}\n      </div>  \n    </div>  \n  )\n}\n\nexport default Home;","function Study() {\n  \n}\n\nexport default Study;","import React, {useState} from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { createDeck } from \"../../utils/api/index\";\n\nfunction CreateDeck() {\n  const [newDeck, setNewDeck] = useState({name: \"\", description: \"\"});\n  const history = useHistory();\n\n  async function handleSubmit(event) {\n      event.preventDefault();\n      const response = await createDeck(newDeck);\n      history.push(`/decks/${response.id}`);\n  }\n\n  const handleChange = (event) => {\n      setNewDeck({...newDeck, [event.target.name]: event.target.value});\n  };\n\n  return (\n      <div className=\"col-0 mx-auto\">\n          <nav>\n              <ol className=\"breadcrumb\">\n                  <li className=\"breadcrumb-item\">\n                      <Link to=\"/\">Home</Link>\n                  </li>\n                  <li className=\"breadcrumb-item\">Create Deck</li>\n              </ol>\n          </nav>\n          <header>\n              <h2>Create Deck</h2>\n          </header>\n          <form>\n              <div>\n                  <label>Name:</label><br />\n                  <input\n                    id=\"name\"\n                    type=\"text\"\n                    name=\"name\"\n                    placeholder=\"Deck Name\"\n                    onChange={handleChange}\n                    value={newDeck.name}\n                    style={{width: \"100%\"}}\n                  />\n              </div>\n              <br />\n              <div>\n                  <label>description:</label><br />\n                  <textarea \n                    id=\"description\"\n                    type=\"textarea\"\n                    name=\"description\"\n                    rows=\"3\"\n                    placeholder=\"Brief description of the deck\"\n                    onChange={handleChange}\n                    value={newDeck.description}\n                    style={{width: \"100%\"}}\n                  />\n              </div>\n              <Link to=\"/\" className=\"btn btn-secondary mr-3\">\n                  Cancel\n              </Link>\n              <button\n                type=\"submit\"\n                onClick={handleSubmit}\n                className=\"btn btn-primary\"\n              >\n                  Submit\n              </button>\n          </form>\n      </div>\n  )\n}\n\nexport default CreateDeck;","function Deck() {\n  \n}\n\nexport default Deck;","function EditDeck() {\n  \n}\n\nexport default EditDeck;","function AddCard() {\n  \n}\n\nexport default AddCard;","function EditCard () {\n  \n}\n\nexport default EditCard;","import React from \"react\";\n\nfunction NotFound() {\n  return (\n    <div className=\"NotFound\">\n      <h1>Not Found</h1>\n    </div>\n  );\n}\n\nexport default NotFound;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport Home from \"./Home\";\nimport Study from \"./Study\";\nimport CreateDeck from \"./Decks/CreateDeck\";\nimport Deck from \"./Decks/Deck\";\nimport EditDeck from \"./Decks/EditDeck\";\nimport AddCard from \"./Decks/AddCard\";\nimport EditCard from \"./Decks/EditCard\";\nimport NotFound from \"./NotFound\";\nimport { Switch, Route } from \"react-router-dom\";\n\nfunction Layout() {\n  return (\n    <div>\n      <Header />\n      <div className=\"container\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>  \n          <Route path=\"/decks/:deckId/study\">\n            <Study />\n          </Route> \n          <Route path=\"/decks/new\">\n            <CreateDeck />\n          </Route> \n          <Route path=\"/decks/:deckId\">\n            <Deck />\n          </Route> \n          <Route path=\"/decks/:deckId/edit\">\n            <EditDeck />\n          </Route> \n          <Route path=\"/decks/:deckId/cards/new\">\n            <AddCard />\n          </Route> \n          <Route path=\"/decks/:deckId/cards/:cardId/edit\">\n            <EditCard />\n          </Route> \n          <Route>\n            <NotFound />\n          </Route>  \n        </Switch>  \n      </div>\n    </div>\n  );\n}\n\nexport default Layout;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Layout from \"./Layout\";\n\n/**\n * App is a wrapper for <Layout>, you should not need to change this file.\n */\n\nfunction App() {\n  return (\n    <div className=\"app-routes\">\n      <Switch>\n        <Route path=\"/\">\n          <Layout />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}